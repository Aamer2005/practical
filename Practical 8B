#include <stdio.h>
#include <malloc.h>

struct node
{
    int data;
    struct node *next;
};
struct node *f = NULL;
struct node *r = NULL;

void enqueue();
void display();
void dequeue();

int main()
{
    int choice;

        printf("Queue Using Linklist\nEnter 1:enqueue\nEnter 2:dequeue\nEnter 3:print\nEnter 4:Exit\n");

    do
    {
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice)
        {
        case 1:
            enqueue();
            break;

        case 2:
            dequeue();
            break;

        case 3:
            display();
            break;

        case 4:
            printf("Exit\n");
            break;
        default:
            printf("Invalid choice.try again.\n");
            break;
        }
    } while (choice != 4);
}

void enqueue()
{
    struct node *p;
    p = (struct node *)malloc(sizeof(struct node));
    printf("Enter Element: ");
    scanf("%d", &p->data);
    if (f == NULL && r == NULL)
    {
        f = p;
        r = p;
        p->next = NULL;
    }
    else
    {
        r->next = p;
        r = p;
        p->next = NULL;
    }
}

void dequeue()
{
    if (f == NULL)
    {
        printf("Under Flow");
        return;
    }

    struct node *t;
    t = f;
    f = f->next;
    printf("%d is delete \n", t->data);
    free(t);
}

void display()
{
    struct node *t;
    t = f;
    if (f == NULL)
    {
        printf("Empty");
    }
    else
    {
        printf("Queue elements: ");
        while (t != NULL)
        { 
            printf("%d\t", t->data);
            t = t->next;
        }
        printf("\n");
    }
}
