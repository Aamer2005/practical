#include <stdio.h>
#define MAX 10

int f = -1, r = -1;
int que[MAX];

void enque()
{
    int item;
    printf("Enter item: ");
    scanf("%d", &item);

    if ((f == 0 && r == MAX - 1) || (f == r + 1))
    {
        printf("Overflow\n");
        return;
    }

    if (f == -1 && r == -1)
    {
        f = 0;
        r = 0;
    }
    else if (r == MAX - 1)
    {
        r = 0;
    }
    else
    {
        r = r + 1;
    }

    que[r] = item;
}

void display()
{
    if (f == -1)
    {
        printf("Queue is empty\n");
        return;
    }

    printf("Queue elements: ");
    if (r >= f)
    {
        for (int i = f; i <= r; i++)
        {
            printf("%d ", que[i]);
        }
    }
    else
    {
        for (int i = f; i < MAX; i++)
        {
            printf("%d ", que[i]);
        }
        for (int i = 0; i <= r; i++)
        {
            printf("%d ", que[i]);
        }
    }
    printf("\n");
}

void deque()
{
    if (f == -1)
    {
        printf("Queue is empty\n");
        return;
    }

    int y = que[f];
    printf("%d is deleted\n", y);

    if (f == r)
    {
        f = -1;
        r = -1;
    }
    else if (f == MAX - 1)
    {
        f = 0;
    }
    else
    {
        f = f + 1;
    }
}

int main()
{
    int choice;

    printf("Circular Queue\nEnter 1:enqueue\nEnter 2:dequeue\nEnter 3:print\nEnter 4:Exit\n");

    do
    {
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice)
        {
        case 1:
            enque();
            break;
        case 2:
            deque();
            break;
        case 3:
            display();
            break;

        case 4:
            printf("Exit\n");
            break;
        default:
            printf("Invalid choice.n");
            break;
        }
    } while (choice != 4);

    return 0;
}
